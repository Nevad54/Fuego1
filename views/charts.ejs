<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Charts for Temperature and Humidity</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="stylesheet" href="/chart.css">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Sharp" rel="stylesheet">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
</head>
<body>
    <div class="container">
        <!-- Sidebar Section -->
        <aside>
            <div class="toggle">
                <div class="logo">
                    <img src="../images/logo.png">
                    <h2>BFP <span class="danger">Batac-City</span></h2>
                </div>
                <div class="close" id="close-btn">
                    <span class="material-icons-sharp">
                        close
                    </span>
                </div>
            </div>

            <div class="sidebar">
              <a href="/adminHome" >
                  <span class="material-icons-sharp">
                      dashboard
                  </span>
                  <h3>Dashboard</h3>
              </a>
             
              <a href="/charts" class="active" >
                  <span class="material-icons-sharp">
                      insights
                  </span>
                  <h3>Charts</h3>
              </a>
              <a href="/alert" >
                  <span class="material-symbols-outlined">
                      notifications
                  </span>
                  <h3>Alerts</h3>
                 
              </a>
              <a href="/database">
                  <span class="material-symbols-outlined">
                      database
                  </span>
                  <h3>Database</h3>
              </a>
                     <!--  <a href="/user">
                        <span class="material-symbols-outlined">
                            manage_accounts
                        </span>
                        <h3>User</h3>
                    </a>
                -->
                
              <a href="/location">
                  <span class="material-icons-sharp">pin_drop</span>
                  <h3>Maps</h3>
              </a>
              <a href="/userList">
                <span class="material-symbols-outlined"> admin_panel_settings </span>
                <h3>Admin Panel</h3>
            </a>
              
              <a href="/AboutUs">
                  <span class="material-symbols-outlined">
                      help
                  </span>
                  <h3>About Us</h3>
              </a>
              <a href="/logout">
                  <span class="material-icons-sharp">
                      logout
                  </span>
                  <h3>Logout</h3>
              </a>
          </div>
        </aside>
        <!-- End of Sidebar Section -->

        <!-- Main Section -->
        <main>
            <h1>Charts</h1>
            <div style="display: flex; flex-direction: column; align-items: center;">
                <div class="chart-container">
                    <canvas id="chart1" width="700" height="200"></canvas>
                </div>
                <div class="chart-container">
                    <canvas id="chart2" width="700" height="200"></canvas>
                </div>
                <div class="chart-container">
                    <canvas id="chart3" width="700" height="200"></canvas>
                </div>
            </div>
                

            <script>
                async function fetchData() {
                    try {
                        const temperatureResponse = await fetch('/api/temperatureData');
                        const humidityResponse = await fetch('/api/humidityData');
                        const smokeResponse = await fetch ('/api/smokeData');
                
                        const temperatureData = await temperatureResponse.json();
                        const humidityData = await humidityResponse.json();
                        const smokeData = await smokeResponse.json();
                
                        // Convert 'value' property to a numeric type
                        const parseNumericValue = (data) => {
                            return data.map(entry => ({ _id: entry._id, value: parseFloat(entry.value) }));
                        };
                
                        return {
                            temperature: parseNumericValue(temperatureData),
                            humidity: parseNumericValue(humidityData),
                            smoke: parseNumericValue(smokeData) // Include smoke data
                        };
                    } catch (error) {
                        console.error('Error fetching data:', error);
                        throw error;
                    }
                }
                
                // Create chart function for smoke
                function createLineChart(ctx, label, color) {
                    return new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: [], // Array to hold x-axis labels
                            datasets: [
                                {
                                    label: label,
                                    borderColor: color,
                                    data: [],
                                    fill: false,
                                },
                            ],
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                x: {
                                    type: 'category',
                                    labels: [], // Array to hold x-axis labels
                                },
                                y: {
                                    beginAtZero: true,
                                },
                            },
                        },
                    });
                }
                
                // Update chart function for smoke
                async function updateChartData(chart, data, label) {
                    try {
                        const timestamp = new Date().toLocaleTimeString();
                        const numericValue = parseFloat(data.value);
                
                        chart.data.labels.push(timestamp); // Add a timestamp as the x-axis label
                        chart.data.datasets[0].data.push(numericValue); // Assuming value is a property of your data object
                
                        // Update x-axis labels
                        chart.options.scales.x.labels = chart.data.labels;
                
                        chart.update();
                        console.log(`Chart (${label}) updated successfully:`, chart.data);
                    } catch (error) {
                        console.error(`Error updating chart (${label}) data:`, error);
                    }
                }
                


document.addEventListener('DOMContentLoaded', async () => {
    console.log('DOM content loaded');

    const chart1Ctx = document.getElementById('chart1').getContext('2d');
    const chart1 = createLineChart(chart1Ctx, 'Temperature (Â°C)', 'rgb(255, 99, 132)');

    const chart2Ctx = document.getElementById('chart2').getContext('2d');
    const chart2 = createLineChart(chart2Ctx, 'Humidity (%)', 'rgb(75, 192, 192)');

    const chart3Ctx = document.getElementById('chart3').getContext('2d');
    const chart3 = createLineChart(chart3Ctx, 'Smoke (%)', 'rgb(210, 92, 192)');
    setInterval(async () => {
        try {
            console.log('Fetching data...');
            const data = await fetchData();
            console.log('Data received:', data);

            if (data.temperature.length > 0 && data.humidity.length > 0 && data.smoke.length > 0) {
                console.log('Updating chart 1');
                updateChartData(chart1, data.temperature[0], 'Temperature');
                console.log('Updating chart 2');
                updateChartData(chart2, data.humidity[0], 'Humidity');
                console.log('Updating chart 2');
                updateChartData(chart3, data.smoke[0], 'Smoke');
            } else {
                console.warn('No data received from the API.');
            }
        } catch (error) {
            console.error('Error updating chart data:', error);
        }
    }, 1000); // Update every 1000 milliseconds (1 second)
});

            </script>
            
        </main>
        <!-- End of Main Content -->

        <!-- Right Section -->
        <div class="right-section">
            <div class="nav">
                <button id="menu-btn">
                    <span class="material-icons-sharp">
                        menu
                    </span>
                </button>
                <div class="dark-mode">
                    <span class="material-icons-sharp active">
                        light_mode
                    </span>
                    <span class="material-icons-sharp">
                        dark_mode
                    </span>
                </div>

                <div class="profile">
                    <div class="info">
                        <p>Hey, <b><%= admin1.username %></b></p>
                        <small class="text-muted">Admin</small>
                    </div>
                    <div class="profile-photo">
                        <a href="/user"> <!-- Navigate back to user profile -->
                            <% if (admin1.profilePicture) { %>
                                <img src="<%= admin1.profilePicture.replace(/\\/g, '/') %>" alt="Profile Picture">
                            <% } else { %>
                                <!-- Placeholder image or default image when no profile picture exists -->
                                <img src="/images/profile-icon.jpg" width="40" class="rounded-circle">
                            <% } %>
                        </a>
                    </div>
                </div>
            </div>
            <!-- End of Nav -->

            <div class="user-profile">
                <div class="logo">
                    <img src="../images/logo.png">
                    <h2>BFP Batac-City</h2>
                    <p></p>
                </div>
            </div>
        </div>
    </div>
    <script src="../js/control.js"></script>
</body>
</html>