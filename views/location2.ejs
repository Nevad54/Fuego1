<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Sharp" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet" href="/location.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.css" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <title>BFP- Batac- City</title>
    <style>

    </style>
</head>

<body>


    <div class="container">

        <!-- Sidebar Section -->
        <aside>
            <div class="toggle">
                <div class="logo">
                    <img src="../images/logo.png">
                    <h2>BFP <span class="danger">Batac-City</span></h2>
                </div>
                <div class="close" id="close-btn">
                    <span class="material-icons-sharp">
                        close
                    </span>
                </div>
            </div>

            <div class="sidebar">
                <a href="/adminHome" >
                    <span class="material-icons-sharp">
                        dashboard
                    </span>
                    <h3>Dashboard</h3>
                </a>
              
                <a href="/location">
                    <span class="material-icons-sharp">pin_drop</span>
                    <h3>Geographic Data</h3>
                </a>
                
                <a href="/alert">
                    <span class="material-symbols-outlined">
                        notifications
                        </span>
                    <h3>Fire History</h3>
                
                    <a href="/database">
                        <span class="material-symbols-outlined">
                            database
                        </span>
                        <h3>Database</h3>
                    </a>
                    
                <a href="/charts">
                    <span class="material-icons-sharp">
                        insights
                    </span>
                    <h3>Data History</h3>
                </a>
                
                    
                </a>
                
                        
                  <!--  <a href="/user">
                        <span class="material-symbols-outlined">
                            manage_accounts
                        </span>
                        <h3>User</h3>
                    </a>
                -->
                    
                
              
            </div>
        </aside>
        
        <!-- End of Sidebar Section -->

        <!-- Main Content -->
        <main>
            <div id="map"></div>
            <div id="searchContainer">
                <label for="searchInput">Search:</label>
                <input type="text" id="searchInput" placeholder="">
                <button onclick="searchIcon()">Search</button>
                <button onclick="stopDisplayingTooltips()">Back</button>
                <!-- Add Back button -->
            </div>
           
            <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
            <script src="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.js"></script>
            <script src="https://unpkg.com/esri-leaflet"></script>
            <script>
                var map = L.map('map').setView([18.059999, 120.543470], 14);
                map.zoomControl.setPosition('bottomright');
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: 'Â© OpenStreetMap contributors'
                }).addTo(map);
        
            var fdasIcon = L.icon({
            iconUrl: '../images/123.png', // Path to the FDAS System icon image
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            tooltipAnchor: [16, -28],
            shadowSize: [41, 41]
        });

        function goBack() {
            // Redirect to the database page
            window.location.href = "/database";
        }
        
        // Add FDAS System marker to the map
                    var extinguisherIcon = L.icon({
                iconUrl: '../images/este.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                tooltipAnchor: [16, -28],
                shadowSize: [41, 41]
                });
                var hydrantIcon = L.icon({
                    iconUrl: '../images/353902.png',
                    iconSize: [25, 41],
                    iconAnchor: [12, 41],
                    popupAnchor: [1, -34],
                    tooltipAnchor: [16, -28],
                    shadowSize: [41, 41]
                });
        
                var customIcon1 = L.icon({
                    iconUrl: '../images/alarmno.png',
                    iconSize: [25, 41],
                    iconAnchor: [12, 41],
                    popupAnchor: [1, -34],
                    tooltipAnchor: [16, -28],
                    shadowSize: [41, 41]
                });
        
                var customIcon2 = L.icon({
                    iconUrl: '../images/alarm.png',
                    iconSize: [25, 41],
                    iconAnchor: [12, 41],
                    popupAnchor: [1, -34],
                    tooltipAnchor: [16, -28],
                    shadowSize: [41, 41]
                }); 
        
        
        
                function fetchDataAndAddMarkers(endpoint, customIcon) {
            fetch(`https://fuego1.onrender.com/${endpoint}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log(`Retrieved ${endpoint} Data:`, data);
        
                    if (Array.isArray(data)) {
                        const markers = data
                            .filter(item => item.latitude !== undefined && item.longitude !== undefined && item.title !== undefined)
                            .map(item => ({
                                latitude: parseFloat(item.latitude),
                                longitude: parseFloat(item.longitude),
                                title: item.title,
                            }));
        
                        markers.forEach(marker => {
                            console.log('Marker Data:', marker);
                            addMarkerWithCustomIcon(marker.latitude, marker.longitude, marker.title, customIcon);
                        });
                    } else {
                        console.error(`Error: Data from server for ${endpoint} is not an array:`, data);
                    }
                })
                .catch(error => {
                    handleFetchError(error, `Failed to load ${endpoint} from the database.`);
                });
        }
        
        function handleFetchError(error, message) {
            console.error('Error:', error);
            alert(message);
        }
        
        fetchDataAndAddMarkers('conventional', customIcon2);
        fetchDataAndAddMarkers('sprinkler', customIcon1);
        fetchDataAndAddMarkers('hydrants', hydrantIcon);
        fetchDataAndAddMarkers('extinguisher', extinguisherIcon);
        fetchDataAndAddMarkers('fdas', fdasIcon);
        
        
                
        function addMarkerWithCustomIcon(lat, lon, label, customIcon) {
            var marker = L.marker([lat, lon], { icon: customIcon, title: label }).addTo(map)
                .bindPopup(label)
                .openPopup();
        
            marker.on('click', function (e) {
                if (!startMarker) {
                    // If there is no start marker, set the clicked marker as the start marker
                    startMarker = e.target;
                    alert('Start marker set. Click on another marker to set the destination.');
                } else {
                    // If there is a start marker, set the clicked marker as the end marker
                    var endMarker = e.target;
                    createRoute(endMarker.getLatLng());
        
                    // Reset the startMarker for the next route
                    startMarker = null;
                }
            });
        }

        var tooltipLayerGroup = L.layerGroup().addTo(map);
        
                function searchIcon() {
                    var searchTerm = document.getElementById('searchInput').value.toLowerCase();
                    var matchingMarkers = [];
        
                    // Remove existing tooltips from the map
             
        
                    map.eachLayer(function (layer) {
                        if (layer instanceof L.Marker && layer.options.title) {
                            var title = layer.options.title.toLowerCase();
                            if (title.includes(searchTerm)) {
                                matchingMarkers.push(layer);
                            }
                        }
                    });
        
                    if (matchingMarkers.length > 0) {
                        var popupContent = "";
                        matchingMarkers.forEach(marker => {
                            var iconHtml = `<img src="${marker.options.icon.options.iconUrl}" alt="icon" style="width: 20px; height: 20px; margin-right: 5px;">`;
                            var content = `<div>${iconHtml} ${marker.options.title}</div>`;
                            marker.bindTooltip(content, { direction: 'top', permanent: true }).addTo(tooltipLayerGroup);
                        });
        
                        map.flyTo(matchingMarkers[0].getLatLng(), 14);
                    }
                }
        
                function toggleCustomHydrantContainer() {
                    var customHydrantContainer = document.getElementById('customHydrantContainer');
                    customHydrantContainer.style.display = (customHydrantContainer.style.display === 'none') ? 'block' : 'none';
                }
        
                function stopDisplayingTooltips() {
                    map.eachLayer(function (layer) {
                        if (layer instanceof L.Marker) {
                            layer.unbindTooltip();
                        }
                    });
                }
            </script>

        </main>
        <!-- End of Main Content -->

        <!-- Right Section -->


        <div class="right-section">
            <div class="nav">
                <button id="menu-btn">
                    <span class="material-icons-sharp">
                        menu
                    </span>
                </button>
                <div class="dark-mode">
                    <span class="material-icons-sharp active">
                        light_mode
                    </span>
                    <span class="material-icons-sharp">
                        dark_mode
                    </span>
                </div>

                <div class="profile">
                    <div class="dropdown">
                        <div class="profile-photo-container">
                            <div class="profile-photo">
                                <% if (admin1.profilePicture) { %>
                                    <img src="<%= admin1.profilePicture.replace(/\\/g, '/') %>" alt="Profile Picture">
                                <% } else { %>
                                    <!-- Placeholder image or default image when no profile picture exists -->
                                    <img src="/images/profile-icon.jpg" width="40" class="rounded-circle">
                                <% } %>
                                
                            </div>
                            <div class="arrow-circle">
                                <!-- Arrow icon -->
                                <i class="material-icons arrow-down">keyboard_arrow_down</i>
                            </div>
                        </div>
                        <div class="dropdown-menu" id="dropdown-menu">
                            <!-- Dropdown menu items -->
                            <a href="/user">Profile</a>
                            <a href="/AboutUs">AboutUs</a>
                            <a href="/userList">Admin Panel</a>
                            <a href="/logout">Logout</a>
                        </div>
                    </div>
                </div>
            
            </div>
            <!-- End of Nav -->

            
            </div>

            
        </div>


    </div>
    <script src="../js/control.js"></script>
</body>

</html>